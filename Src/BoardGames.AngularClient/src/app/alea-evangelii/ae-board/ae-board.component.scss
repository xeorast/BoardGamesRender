@use "sass:math";
@use "crossed-square.scss" as cross;
@use "pieces.scss" with ($piece-zindex: 1);

@import url('https://fonts.cdnfonts.com/css/norse');

$field-zindex: 0;
$selected-piece-zindex: 2;
$selecting-piece-zindex: 3;
$arrow-zindex: 10;
$board-gap: 3px;

.board-frame {
    --borders: #461f0f;
    background-color: #c5763e;
    padding: 20px;
    border: solid 3px var(--borders);
    position: relative;

    @media (max-width: 500px) {
        padding: 10px;
    }

    @media (max-width: 250px) {
        padding: 5px;
    }
}

.game-result,
.game-loading {
    position: absolute;
    z-index: 10;
    left: 50%;
    top: 50%;
    transform: translate(-50%, -50%);

    &.winner {
        color: var(--bs-success);
    }

    &.loser {
        color: var(--bs-danger);
    }

    .game-result-title,
    .game-loading-title {
        font-weight: 700;
        text-shadow: 0 0 4px white, 0 0 2px black, 0 0 5px currentColor;
    }
}

.game-loading .game-loading-title {
    color: white;
}

.board {
    display: grid;
    grid-template-columns: repeat(var(--board-width), minmax(0, 1fr));
    grid-template-rows: repeat(var(--board-height), minmax(0, 1fr));
    gap: $board-gap;
    background-color: var(--borders);
    border: solid $board-gap var(--borders);
    isolation: isolate;
}

.field {
    z-index: $field-zindex;
    background-color: #daa764;
    aspect-ratio: 1;

    &.forbidden-field {
        background-color: #bd5e58;
        @include cross.crossed-square(3px, var(--borders));
    }

    &.can-move-to {
        filter: brightness(125%)
    }

    &.can-move-to:hover {
        filter: brightness(150%)
    }
}

.piece.selectable:hover,
.piece.selected {
    z-index: $selected-piece-zindex;
    transform: translate(20%, -10%);
    box-shadow: var(--border-shadow), -2px 2px 4px 1px var(--shadow-color);
}

.piece.selectable:hover {
    z-index: $selecting-piece-zindex;
}

.arrow-box {
    $arrow-thickness: .15rem;
    $half-arrow-thickness: 0.075rem;
    $neg-half-arrow-thickness: -0.075rem;
    --wings-length: .75rem;

    @media(max-width:700px) {
        --wings-length: .5rem;
    }

    grid-column: var(--arrow-start-col);
    grid-row: var(--arrow-start-row);
    z-index: $arrow-zindex;
    position: relative;
    padding: 50%;

    .arrow {
        position: absolute;
        pointer-events: none;

        width: calc((100% + $board-gap) * var(--arrow-length));
        height: $arrow-thickness;
        border-radius: $half-arrow-thickness;

        transform: translate($neg-half-arrow-thickness, $neg-half-arrow-thickness) rotate(var(--arrow-angle));
        transform-origin: $half-arrow-thickness $half-arrow-thickness;

        background: #eee6ba;
        filter: drop-shadow(0 0 1px black);

        &::before,
        &::after {
            content: '';
            position: absolute;
            right: 0;

            width: var(--wings-length);
            height: $arrow-thickness;
            border-radius: $half-arrow-thickness;

            transform-origin: calc(100% - $half-arrow-thickness + 1px) $half-arrow-thickness;
            background: inherit;
        }

        &::before {
            transform: rotate(45deg);
        }

        &::after {
            transform: rotate(-45deg);
        }
    }
}